{"name":"Modnunifinal","tagline":"Modeling the Universe Final | WebApp","body":"Pratishta Yerakala\r\npy2211\r\nW4260 Final Project - KOI Web App\r\n\r\ni) Introduction\r\nWe have been given a brief introduction to the Kepler discoveries and how to\r\nuse the python module kplr to get information about these objects. The kplr\r\nAPI (http://dan.iel.fm/kplr/#api-interface) allow us to input a KOI number\r\nand extract information about the system such as light curves and fits\r\nfiles. But we can also use that information to manipulate the data and\r\nproduce model-fitting plots. Having access to the data in this manner allows\r\nthis app to use numerical methods and other techniques to display general\r\nbehavior of the system so that we could easily decide if we would like to\r\nstudy it further (especially if there are any interesting patterns). The app\r\nuses Flask (http://flask.pocoo.org/docs/0.10/quickstart/) \r\n\r\nii) Numerical methods\r\nThe app makes use of model-fitting from problem set 7. While Chi-Squared can\r\nbe calculated, it cannot be displayed at this time in the app development\r\nprocess. However, the model-fitting code can used. Taking in user input, the\r\napp uses the model-fitting code from the problem set but allows the model to\r\nbe fit to an KOI the user chooses. \r\n\r\niii) Summary\r\nThe app uses Flask to serve contents to the web. All the files and\r\ndirectories need to be downloaded in that structure for the app to work on\r\nthe local host. Python code for the numerical methods are written in \"koiapp.py\"\r\nand the app itself can be run by:\r\n\r\n$ python koiapp.py\r\n\r\nThen, on a browser (preferably Firefox, since the app hasn't been tested on\r\nothers), with \"localhost:5000\" in the url box, the app will show. Cache\r\nneeds to be disabled in the browser, or else new plots will not display when\r\nnew KOI numbers are entered. The .html files are stored in the \"templates\"\r\ndirectory and the plots generated from the app are stored in the \"static\"\r\nfolder (the \"static\" directory has a sample.txt which is just a reminder\r\nthat the images will go in that directory and that it needs to be there).\r\n\r\nWhat it can do: \r\nIt can work on the localhost, and on port 5000 by default. It asks for a KOI\r\nnumber as user input. Once \"Submit query\" or the return key has been\r\npressed, it displays a light curve of the system. In the new page,\r\nadditional boxes are available so that the viewer could input another KOI\r\nnumber (probably the one that they're currently looking at the light curve\r\nfor) and the start and end times for the ecplises. The user should also put\r\nin the t_0 of where the lowest luminosity is. The submit box has a step\r\nfeature so that the user could adjust the step and have a more accurate\r\nresult. (If the user enters only a KOI number in the \"Enter eclipse section:\" page,\r\nthe whole lightcurve for that system will display.) Once that is submitted, the \r\napp displays a model (in red and '-' for linestyle). \r\n\r\n\r\nWhat it cannot do: \r\nThere have been no error checks done, so the app assumes that the user will\r\ninput the correct parameters at all times. Else, the app doesn't exactly\r\ncrash, but will display error messages (albeit in an ungraceful manner). The\r\napp also unfortunately, at this stage, only runs on the localhost. Ideally,\r\nit would be on a server with its own domain name but that's looking into the\r\nfuture to deploy the app. \r\n\r\nA good test: \r\nKOI: 97.01\r\nstart: 124\r\nend: 125\r\ntau0: 124.51\r\n\r\nOf course, if the user has a good enough eye, they can make models with\r\nother eclipses but the data above can produce a definite model that fits\r\npretty well. \r\n\r\niv) Discussion\r\nThe Kepler Mission site (http://kepler.nasa.gov/Mission/discoveries/) has\r\ninformation on all the systems discovered so far. Clicking on an object\r\nallows us to see the light curves, size, mass, and a lot of other features.\r\nThe reason the KOI Web App might be useful despite the convenient use of the\r\noriginal Kepler site is so that numerical methods can be used to analyze the\r\ninformation provided. It might be especially useful if there were to be\r\na study done on certain types of planets (such as ones that have specific\r\nbehaviors in eclipses, or systems with overall increase or decrease in\r\nluminosity). \r\n\r\nI would like to develop this app much further than what it can\r\ndo now (and make it look a lot better hopefully!) so that it could implement\r\nother numerical methods as well. I'd like for it to first and foremost, do\r\nerror-checking. Then, provide a better user interface to make the app seem\r\nmore complete before adding additional features (which might end up becoming\r\nmore difficult to adjust to the design later). Then, I'd like to take\r\nadvantage of the kplr API to acquire fits files and do some sort of image\r\nanalysis. \r\n\r\nThis is my first time doing anything like front-end development for making\r\nan app but I think it was an excellent learning experience. I loved using\r\nnumerical methods with data in astrophysics, but I think it would be even\r\nbetter to share those discoveries with an audience who only need a glimpse\r\nto appreciate the data. I think it would also be useful - and this is\r\nsomething I'd like to improve with the app - is have an educational\r\ncomponent so that the user could learn more about numerical methods as they\r\ntinker with the app. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}